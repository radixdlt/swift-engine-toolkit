// This file was autogenerated by some hot garbage in the `uniffi` crate.
// Trust me, you don't want to mess with it!

#pragma once

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

// The following structs are used to implement the lowest level
// of the FFI, and thus useful to multiple uniffied crates.
// We ensure they are declared exactly once, with a header guard, UNIFFI_SHARED_H.
#ifdef UNIFFI_SHARED_H
    // We also try to prevent mixing versions of shared uniffi header structs.
    // If you add anything to the #else block, you must increment the version suffix in UNIFFI_SHARED_HEADER_V4
    #ifndef UNIFFI_SHARED_HEADER_V4
        #error Combining helper code from multiple versions of uniffi is not supported
    #endif // ndef UNIFFI_SHARED_HEADER_V4
#else
#define UNIFFI_SHARED_H
#define UNIFFI_SHARED_HEADER_V4
// ⚠️ Attention: If you change this #else block (ending in `#endif // def UNIFFI_SHARED_H`) you *must* ⚠️
// ⚠️ increment the version suffix in all instances of UNIFFI_SHARED_HEADER_V4 in this file.           ⚠️

typedef struct RustBuffer
{
    int32_t capacity;
    int32_t len;
    uint8_t *_Nullable data;
} RustBuffer;

typedef int32_t (*ForeignCallback)(uint64_t, int32_t, const uint8_t *_Nonnull, int32_t, RustBuffer *_Nonnull);

// Task defined in Rust that Swift executes
typedef void (*UniFfiRustTaskCallback)(const void * _Nullable);

// Callback to execute Rust tasks using a Swift Task
//
// Args:
//   executor: ForeignExecutor lowered into a size_t value
//   delay: Delay in MS
//   task: UniFfiRustTaskCallback to call
//   task_data: data to pass the task callback
typedef void (*UniFfiForeignExecutorCallback)(size_t, uint32_t, UniFfiRustTaskCallback _Nullable, const void * _Nullable);

typedef struct ForeignBytes
{
    int32_t len;
    const uint8_t *_Nullable data;
} ForeignBytes;

// Error definitions
typedef struct RustCallStatus {
    int8_t code;
    RustBuffer errorBuf;
} RustCallStatus;

// ⚠️ Attention: If you change this #else block (ending in `#endif // def UNIFFI_SHARED_H`) you *must* ⚠️
// ⚠️ increment the version suffix in all instances of UNIFFI_SHARED_HEADER_V4 in this file.           ⚠️
#endif // def UNIFFI_SHARED_H

// Callbacks for UniFFI Futures
typedef void (*UniFfiFutureCallbackUInt8)(const void * _Nonnull, uint8_t, RustCallStatus);
typedef void (*UniFfiFutureCallbackInt8)(const void * _Nonnull, int8_t, RustCallStatus);
typedef void (*UniFfiFutureCallbackUInt16)(const void * _Nonnull, uint16_t, RustCallStatus);
typedef void (*UniFfiFutureCallbackUInt64)(const void * _Nonnull, uint64_t, RustCallStatus);
typedef void (*UniFfiFutureCallbackUnsafeMutableRawPointer)(const void * _Nonnull, void*_Nonnull, RustCallStatus);
typedef void (*UniFfiFutureCallbackUnsafeMutableRawPointer)(const void * _Nonnull, void*_Nonnull, RustCallStatus);
typedef void (*UniFfiFutureCallbackUnsafeMutableRawPointer)(const void * _Nonnull, void*_Nonnull, RustCallStatus);
typedef void (*UniFfiFutureCallbackUnsafeMutableRawPointer)(const void * _Nonnull, void*_Nonnull, RustCallStatus);
typedef void (*UniFfiFutureCallbackUnsafeMutableRawPointer)(const void * _Nonnull, void*_Nonnull, RustCallStatus);
typedef void (*UniFfiFutureCallbackUnsafeMutableRawPointer)(const void * _Nonnull, void*_Nonnull, RustCallStatus);
typedef void (*UniFfiFutureCallbackUnsafeMutableRawPointer)(const void * _Nonnull, void*_Nonnull, RustCallStatus);
typedef void (*UniFfiFutureCallbackUnsafeMutableRawPointer)(const void * _Nonnull, void*_Nonnull, RustCallStatus);
typedef void (*UniFfiFutureCallbackUnsafeMutableRawPointer)(const void * _Nonnull, void*_Nonnull, RustCallStatus);
typedef void (*UniFfiFutureCallbackUnsafeMutableRawPointer)(const void * _Nonnull, void*_Nonnull, RustCallStatus);
typedef void (*UniFfiFutureCallbackUnsafeMutableRawPointer)(const void * _Nonnull, void*_Nonnull, RustCallStatus);
typedef void (*UniFfiFutureCallbackUnsafeMutableRawPointer)(const void * _Nonnull, void*_Nonnull, RustCallStatus);
typedef void (*UniFfiFutureCallbackUnsafeMutableRawPointer)(const void * _Nonnull, void*_Nonnull, RustCallStatus);
typedef void (*UniFfiFutureCallbackUnsafeMutableRawPointer)(const void * _Nonnull, void*_Nonnull, RustCallStatus);
typedef void (*UniFfiFutureCallbackUnsafeMutableRawPointer)(const void * _Nonnull, void*_Nonnull, RustCallStatus);
typedef void (*UniFfiFutureCallbackUnsafeMutableRawPointer)(const void * _Nonnull, void*_Nonnull, RustCallStatus);
typedef void (*UniFfiFutureCallbackUnsafeMutableRawPointer)(const void * _Nonnull, void*_Nonnull, RustCallStatus);
typedef void (*UniFfiFutureCallbackUnsafeMutableRawPointer)(const void * _Nonnull, void*_Nonnull, RustCallStatus);
typedef void (*UniFfiFutureCallbackUnsafeMutableRawPointer)(const void * _Nonnull, void*_Nonnull, RustCallStatus);
typedef void (*UniFfiFutureCallbackUnsafeMutableRawPointer)(const void * _Nonnull, void*_Nonnull, RustCallStatus);
typedef void (*UniFfiFutureCallbackUnsafeMutableRawPointer)(const void * _Nonnull, void*_Nonnull, RustCallStatus);
typedef void (*UniFfiFutureCallbackRustBuffer)(const void * _Nonnull, RustBuffer, RustCallStatus);

// Scaffolding functions
void uniffi_radix_engine_toolkit_uniffi_fn_free_accessrule(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_accessrule_allow_all(RustCallStatus *_Nonnull out_status
    
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_accessrule_deny_all(RustCallStatus *_Nonnull out_status
    
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_accessrule_require(RustBuffer resource_or_non_fungible, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_accessrule_require_all_of(RustBuffer resources, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_accessrule_require_amount(void*_Nonnull amount, void*_Nonnull resource, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_accessrule_require_any_of(RustBuffer resources, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_accessrule_require_count_of(uint8_t count, RustBuffer resources, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_accessrule_require_virtual_signature(RustBuffer public_key, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_accessrule_and(void*_Nonnull ptr, void*_Nonnull other, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_accessrule_or(void*_Nonnull ptr, void*_Nonnull other, RustCallStatus *_Nonnull out_status
);
void uniffi_radix_engine_toolkit_uniffi_fn_free_address(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_address_from_raw(RustBuffer node_id_bytes, uint8_t network_id, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_address_new(RustBuffer address, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_address_resource_address_from_olympia_resource_address(void*_Nonnull olympia_resource_address, uint8_t network_id, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_address_virtual_account_address_from_olympia_address(void*_Nonnull olympia_account_address, uint8_t network_id, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_address_virtual_account_address_from_public_key(RustBuffer public_key, uint8_t network_id, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_address_virtual_identity_address_from_public_key(RustBuffer public_key, uint8_t network_id, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_address_address_string(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_address_as_str(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_address_bytes(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_address_entity_type(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_radix_engine_toolkit_uniffi_fn_method_address_is_global(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_radix_engine_toolkit_uniffi_fn_method_address_is_global_component(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_radix_engine_toolkit_uniffi_fn_method_address_is_global_consensus_manager(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_radix_engine_toolkit_uniffi_fn_method_address_is_global_fungible_resource_manager(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_radix_engine_toolkit_uniffi_fn_method_address_is_global_non_fungible_resource_manager(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_radix_engine_toolkit_uniffi_fn_method_address_is_global_package(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_radix_engine_toolkit_uniffi_fn_method_address_is_global_resource_manager(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_radix_engine_toolkit_uniffi_fn_method_address_is_global_virtual(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_radix_engine_toolkit_uniffi_fn_method_address_is_internal(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_radix_engine_toolkit_uniffi_fn_method_address_is_internal_fungible_vault(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_radix_engine_toolkit_uniffi_fn_method_address_is_internal_kv_store(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_radix_engine_toolkit_uniffi_fn_method_address_is_internal_non_fungible_vault(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_radix_engine_toolkit_uniffi_fn_method_address_is_internal_vault(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
uint8_t uniffi_radix_engine_toolkit_uniffi_fn_method_address_network_id(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void uniffi_radix_engine_toolkit_uniffi_fn_free_decimal(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_decimal_max(RustCallStatus *_Nonnull out_status
    
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_decimal_min(RustCallStatus *_Nonnull out_status
    
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_decimal_new(RustBuffer value, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_decimal_one(RustCallStatus *_Nonnull out_status
    
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_decimal_zero(RustCallStatus *_Nonnull out_status
    
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_decimal_abs(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_decimal_add(void*_Nonnull ptr, void*_Nonnull other, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_decimal_as_str(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_decimal_cbrt(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_decimal_ceiling(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_decimal_div(void*_Nonnull ptr, void*_Nonnull other, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_radix_engine_toolkit_uniffi_fn_method_decimal_equal(void*_Nonnull ptr, void*_Nonnull other, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_decimal_floor(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_radix_engine_toolkit_uniffi_fn_method_decimal_greater_than(void*_Nonnull ptr, void*_Nonnull other, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_radix_engine_toolkit_uniffi_fn_method_decimal_greater_than_or_equal(void*_Nonnull ptr, void*_Nonnull other, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_radix_engine_toolkit_uniffi_fn_method_decimal_is_negative(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_radix_engine_toolkit_uniffi_fn_method_decimal_is_positive(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_radix_engine_toolkit_uniffi_fn_method_decimal_is_zero(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_radix_engine_toolkit_uniffi_fn_method_decimal_less_than(void*_Nonnull ptr, void*_Nonnull other, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_radix_engine_toolkit_uniffi_fn_method_decimal_less_than_or_equal(void*_Nonnull ptr, void*_Nonnull other, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_decimal_mul(void*_Nonnull ptr, void*_Nonnull other, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_radix_engine_toolkit_uniffi_fn_method_decimal_not_equal(void*_Nonnull ptr, void*_Nonnull other, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_decimal_nth_root(void*_Nonnull ptr, uint32_t n, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_decimal_powi(void*_Nonnull ptr, int64_t exp, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_decimal_round(void*_Nonnull ptr, int32_t decimal_places, RustBuffer rounding_mode, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_decimal_sqrt(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_decimal_sub(void*_Nonnull ptr, void*_Nonnull other, RustCallStatus *_Nonnull out_status
);
void uniffi_radix_engine_toolkit_uniffi_fn_free_hash(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_hash_from_hex_string(RustBuffer hash, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_hash_from_unhashed_bytes(RustBuffer bytes, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_hash_new(RustBuffer hash, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_hash_as_str(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_hash_bytes(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void uniffi_radix_engine_toolkit_uniffi_fn_free_instructions(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_instructions_from_instructions(RustBuffer instructions, uint8_t network_id, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_instructions_from_string(RustBuffer string, uint8_t network_id, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_instructions_as_str(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_instructions_instructions_list(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
uint8_t uniffi_radix_engine_toolkit_uniffi_fn_method_instructions_network_id(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void uniffi_radix_engine_toolkit_uniffi_fn_free_intent(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_intent_decompile(RustBuffer compiled_intent, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_intent_new(RustBuffer header, void*_Nonnull manifest, RustBuffer message, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_intent_compile(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_intent_hash(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_intent_header(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_intent_intent_hash(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_intent_manifest(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_intent_message(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void uniffi_radix_engine_toolkit_uniffi_fn_method_intent_statically_validate(void*_Nonnull ptr, void*_Nonnull validation_config, RustCallStatus *_Nonnull out_status
);
void uniffi_radix_engine_toolkit_uniffi_fn_free_manifestbuilder(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_manifestbuilder_new(RustCallStatus *_Nonnull out_status
    
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_account_deposit(void*_Nonnull ptr, void*_Nonnull account_address, RustBuffer bucket, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_account_deposit_batch(void*_Nonnull ptr, void*_Nonnull account_address, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_account_try_deposit_batch_or_abort(void*_Nonnull ptr, void*_Nonnull account_address, RustBuffer authorized_depositor_badge, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_account_try_deposit_batch_or_refund(void*_Nonnull ptr, void*_Nonnull account_address, RustBuffer authorized_depositor_badge, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_account_try_deposit_or_abort(void*_Nonnull ptr, void*_Nonnull account_address, RustBuffer authorized_depositor_badge, RustBuffer bucket, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_account_try_deposit_or_refund(void*_Nonnull ptr, void*_Nonnull account_address, RustBuffer authorized_depositor_badge, RustBuffer bucket, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_allocate_global_address(void*_Nonnull ptr, void*_Nonnull package_address, RustBuffer blueprint_name, RustBuffer into_address_reservation, RustBuffer into_named_address, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_assert_worktop_contains(void*_Nonnull ptr, void*_Nonnull resource_address, void*_Nonnull amount, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_assert_worktop_contains_any(void*_Nonnull ptr, void*_Nonnull resource_address, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_assert_worktop_contains_non_fungibles(void*_Nonnull ptr, void*_Nonnull resource_address, RustBuffer ids, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_build(void*_Nonnull ptr, uint8_t network_id, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_burn_resource(void*_Nonnull ptr, RustBuffer bucket, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_call_access_rules_method(void*_Nonnull ptr, RustBuffer address, RustBuffer method_name, RustBuffer args, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_call_direct_vault_method(void*_Nonnull ptr, void*_Nonnull address, RustBuffer method_name, RustBuffer args, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_call_function(void*_Nonnull ptr, RustBuffer address, RustBuffer blueprint_name, RustBuffer function_name, RustBuffer args, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_call_metadata_method(void*_Nonnull ptr, RustBuffer address, RustBuffer method_name, RustBuffer args, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_call_method(void*_Nonnull ptr, RustBuffer address, RustBuffer method_name, RustBuffer args, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_call_royalty_method(void*_Nonnull ptr, RustBuffer address, RustBuffer method_name, RustBuffer args, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_clone_proof(void*_Nonnull ptr, RustBuffer proof, RustBuffer into_proof, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_create_access_controller_with_securify_structure(void*_Nonnull ptr, RustBuffer controlled_asset, RustBuffer primary_role, RustBuffer recovery_role, RustBuffer confirmation_role, RustBuffer timed_recovery_delay_in_minutes, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_create_account_advanced(void*_Nonnull ptr, RustBuffer owner_role, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_create_fungible_resource_manager(void*_Nonnull ptr, RustBuffer owner_role, int8_t track_total_supply, uint8_t divisibility, RustBuffer initial_supply, RustBuffer resource_roles, RustBuffer metadata, RustBuffer address_reservation, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_create_proof_from_auth_zone_of_all(void*_Nonnull ptr, void*_Nonnull resource_address, RustBuffer into_proof, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_create_proof_from_auth_zone_of_amount(void*_Nonnull ptr, void*_Nonnull resource_address, void*_Nonnull amount, RustBuffer into_proof, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_create_proof_from_auth_zone_of_non_fungibles(void*_Nonnull ptr, void*_Nonnull resource_address, RustBuffer ids, RustBuffer into_proof, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_create_proof_from_bucket_of_all(void*_Nonnull ptr, RustBuffer bucket, RustBuffer into_proof, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_create_proof_from_bucket_of_amount(void*_Nonnull ptr, void*_Nonnull amount, RustBuffer bucket, RustBuffer into_proof, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_create_proof_from_bucket_of_non_fungibles(void*_Nonnull ptr, RustBuffer ids, RustBuffer bucket, RustBuffer into_proof, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_create_signature_based_access_controller(void*_Nonnull ptr, RustBuffer controlled_asset, RustBuffer primary_role, RustBuffer recovery_role, RustBuffer confirmation_role, RustBuffer timed_recovery_delay_in_minutes, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_drop_all_proofs(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_drop_auth_zone_proofs(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_drop_auth_zone_signature_proofs(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_drop_proof(void*_Nonnull ptr, RustBuffer proof, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_faucet_free_xrd(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_faucet_lock_fee(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_mint_fungible(void*_Nonnull ptr, void*_Nonnull resource_address, void*_Nonnull amount, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_pop_from_auth_zone(void*_Nonnull ptr, RustBuffer into_proof, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_publish_package(void*_Nonnull ptr, RustBuffer code, RustBuffer definition, RustBuffer metadata, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_push_to_auth_zone(void*_Nonnull ptr, RustBuffer proof, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_return_to_worktop(void*_Nonnull ptr, RustBuffer bucket, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_set_metadata(void*_Nonnull ptr, void*_Nonnull address, RustBuffer key, RustBuffer value, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_set_role(void*_Nonnull ptr, void*_Nonnull address, RustBuffer module, RustBuffer role_key, void*_Nonnull rule, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_take_all_from_worktop(void*_Nonnull ptr, void*_Nonnull resource_address, RustBuffer into_bucket, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_take_from_worktop(void*_Nonnull ptr, void*_Nonnull resource_address, void*_Nonnull amount, RustBuffer into_bucket, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_take_non_fungibles_from_worktop(void*_Nonnull ptr, void*_Nonnull resource_address, RustBuffer ids, RustBuffer into_bucket, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_withdraw_from_account(void*_Nonnull ptr, void*_Nonnull account_address, void*_Nonnull resource_address, void*_Nonnull amount, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_manifestbuilder_withdraw_non_fungibles_from_account(void*_Nonnull ptr, void*_Nonnull account_address, void*_Nonnull resource_address, RustBuffer ids, RustCallStatus *_Nonnull out_status
);
void uniffi_radix_engine_toolkit_uniffi_fn_free_messagevalidationconfig(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_messagevalidationconfig_default(RustCallStatus *_Nonnull out_status
    
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_messagevalidationconfig_new(uint64_t max_plaintext_message_length, uint64_t max_encrypted_message_length, uint64_t max_mime_type_length, uint64_t max_decryptors, RustCallStatus *_Nonnull out_status
);
uint64_t uniffi_radix_engine_toolkit_uniffi_fn_method_messagevalidationconfig_max_decryptors(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
uint64_t uniffi_radix_engine_toolkit_uniffi_fn_method_messagevalidationconfig_max_encrypted_message_length(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
uint64_t uniffi_radix_engine_toolkit_uniffi_fn_method_messagevalidationconfig_max_mime_type_length(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
uint64_t uniffi_radix_engine_toolkit_uniffi_fn_method_messagevalidationconfig_max_plaintext_message_length(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void uniffi_radix_engine_toolkit_uniffi_fn_free_nonfungibleglobalid(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_nonfungibleglobalid_from_parts(void*_Nonnull resource_address, RustBuffer non_fungible_local_id, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_nonfungibleglobalid_new(RustBuffer non_fungible_global_id, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_nonfungibleglobalid_virtual_signature_badge(RustBuffer public_key, uint8_t network_id, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_nonfungibleglobalid_as_str(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_nonfungibleglobalid_local_id(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_nonfungibleglobalid_resource_address(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void uniffi_radix_engine_toolkit_uniffi_fn_free_notarizedtransaction(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_notarizedtransaction_decompile(RustBuffer compiled_notarized_transaction, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_notarizedtransaction_new(void*_Nonnull signed_intent, RustBuffer notary_signature, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_notarizedtransaction_compile(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_notarizedtransaction_hash(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_notarizedtransaction_intent_hash(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_notarizedtransaction_notarized_transaction_hash(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_notarizedtransaction_notary_signature(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_notarizedtransaction_signed_intent(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_notarizedtransaction_signed_intent_hash(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void uniffi_radix_engine_toolkit_uniffi_fn_method_notarizedtransaction_statically_validate(void*_Nonnull ptr, void*_Nonnull validation_config, RustCallStatus *_Nonnull out_status
);
void uniffi_radix_engine_toolkit_uniffi_fn_free_olympiaaddress(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_olympiaaddress_new(RustBuffer address, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_olympiaaddress_as_str(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_olympiaaddress_public_key(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void uniffi_radix_engine_toolkit_uniffi_fn_free_precisedecimal(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_precisedecimal_max(RustCallStatus *_Nonnull out_status
    
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_precisedecimal_min(RustCallStatus *_Nonnull out_status
    
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_precisedecimal_new(RustBuffer value, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_precisedecimal_one(RustCallStatus *_Nonnull out_status
    
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_precisedecimal_zero(RustCallStatus *_Nonnull out_status
    
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_precisedecimal_abs(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_precisedecimal_add(void*_Nonnull ptr, void*_Nonnull other, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_precisedecimal_as_str(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_precisedecimal_cbrt(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_precisedecimal_ceiling(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_precisedecimal_div(void*_Nonnull ptr, void*_Nonnull other, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_radix_engine_toolkit_uniffi_fn_method_precisedecimal_equal(void*_Nonnull ptr, void*_Nonnull other, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_precisedecimal_floor(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_radix_engine_toolkit_uniffi_fn_method_precisedecimal_greater_than(void*_Nonnull ptr, void*_Nonnull other, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_radix_engine_toolkit_uniffi_fn_method_precisedecimal_greater_than_or_equal(void*_Nonnull ptr, void*_Nonnull other, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_radix_engine_toolkit_uniffi_fn_method_precisedecimal_is_negative(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_radix_engine_toolkit_uniffi_fn_method_precisedecimal_is_positive(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_radix_engine_toolkit_uniffi_fn_method_precisedecimal_is_zero(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_radix_engine_toolkit_uniffi_fn_method_precisedecimal_less_than(void*_Nonnull ptr, void*_Nonnull other, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_radix_engine_toolkit_uniffi_fn_method_precisedecimal_less_than_or_equal(void*_Nonnull ptr, void*_Nonnull other, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_precisedecimal_mul(void*_Nonnull ptr, void*_Nonnull other, RustCallStatus *_Nonnull out_status
);
int8_t uniffi_radix_engine_toolkit_uniffi_fn_method_precisedecimal_not_equal(void*_Nonnull ptr, void*_Nonnull other, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_precisedecimal_nth_root(void*_Nonnull ptr, uint32_t n, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_precisedecimal_powi(void*_Nonnull ptr, int64_t exp, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_precisedecimal_round(void*_Nonnull ptr, int32_t decimal_places, RustBuffer rounding_mode, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_precisedecimal_sqrt(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_precisedecimal_sub(void*_Nonnull ptr, void*_Nonnull other, RustCallStatus *_Nonnull out_status
);
void uniffi_radix_engine_toolkit_uniffi_fn_free_privatekey(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_privatekey_new(RustBuffer bytes, RustBuffer curve, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_privatekey_new_ed25519(RustBuffer bytes, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_privatekey_new_secp256k1(RustBuffer bytes, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_privatekey_public_key(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_privatekey_sign(void*_Nonnull ptr, void*_Nonnull hash, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_privatekey_sign_to_signature(void*_Nonnull ptr, void*_Nonnull hash, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_privatekey_sign_to_signature_with_public_key(void*_Nonnull ptr, void*_Nonnull hash, RustCallStatus *_Nonnull out_status
);
void uniffi_radix_engine_toolkit_uniffi_fn_free_signedintent(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_signedintent_decompile(RustBuffer compiled_signed_intent, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_signedintent_new(void*_Nonnull intent, RustBuffer intent_signatures, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_signedintent_compile(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_signedintent_hash(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_signedintent_intent(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_signedintent_intent_hash(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_signedintent_intent_signatures(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_signedintent_signed_intent_hash(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void uniffi_radix_engine_toolkit_uniffi_fn_method_signedintent_statically_validate(void*_Nonnull ptr, void*_Nonnull validation_config, RustCallStatus *_Nonnull out_status
);
void uniffi_radix_engine_toolkit_uniffi_fn_free_transactionbuilder(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_transactionbuilder_new(RustCallStatus *_Nonnull out_status
    
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_transactionbuilder_header(void*_Nonnull ptr, RustBuffer header, RustCallStatus *_Nonnull out_status
);
void uniffi_radix_engine_toolkit_uniffi_fn_free_transactionbuilderheaderstep(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_transactionbuilderheaderstep_manifest(void*_Nonnull ptr, void*_Nonnull manifest, RustCallStatus *_Nonnull out_status
);
void uniffi_radix_engine_toolkit_uniffi_fn_free_transactionbuilderintentsignaturesstep(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_transactionbuilderintentsignaturesstep_notarize_with_private_key(void*_Nonnull ptr, void*_Nonnull private_key, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_transactionbuilderintentsignaturesstep_notarize_with_signer(void*_Nonnull ptr, uint64_t signer, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_transactionbuilderintentsignaturesstep_sign_with_private_key(void*_Nonnull ptr, void*_Nonnull private_key, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_transactionbuilderintentsignaturesstep_sign_with_signer(void*_Nonnull ptr, uint64_t signer, RustCallStatus *_Nonnull out_status
);
void uniffi_radix_engine_toolkit_uniffi_fn_free_transactionbuildermessagestep(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_transactionbuildermessagestep_message(void*_Nonnull ptr, RustBuffer message, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_transactionbuildermessagestep_sign_with_private_key(void*_Nonnull ptr, void*_Nonnull private_key, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_transactionbuildermessagestep_sign_with_signer(void*_Nonnull ptr, uint64_t signer, RustCallStatus *_Nonnull out_status
);
void uniffi_radix_engine_toolkit_uniffi_fn_free_transactionhash(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_transactionhash_from_str(RustBuffer string, uint8_t network_id, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_transactionhash_as_hash(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_transactionhash_as_str(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_transactionhash_bytes(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
uint8_t uniffi_radix_engine_toolkit_uniffi_fn_method_transactionhash_network_id(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void uniffi_radix_engine_toolkit_uniffi_fn_free_transactionmanifest(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_transactionmanifest_new(void*_Nonnull instructions, RustBuffer blobs, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_transactionmanifest_accounts_deposited_into(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_transactionmanifest_accounts_requiring_auth(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_transactionmanifest_accounts_withdrawn_from(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_transactionmanifest_analyze_execution(void*_Nonnull ptr, RustBuffer transaction_receipt, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_transactionmanifest_blobs(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_transactionmanifest_extract_addresses(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_method_transactionmanifest_identities_requiring_auth(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_transactionmanifest_instructions(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_transactionmanifest_modify(void*_Nonnull ptr, RustBuffer modifications, RustCallStatus *_Nonnull out_status
);
void uniffi_radix_engine_toolkit_uniffi_fn_method_transactionmanifest_statically_validate(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void uniffi_radix_engine_toolkit_uniffi_fn_free_validationconfig(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_validationconfig_default(uint8_t network_id, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_constructor_validationconfig_new(uint8_t network_id, uint64_t max_notarized_payload_size, uint16_t min_tip_percentage, uint16_t max_tip_percentage, uint64_t max_epoch_range, void*_Nonnull message_validation, RustCallStatus *_Nonnull out_status
);
uint64_t uniffi_radix_engine_toolkit_uniffi_fn_method_validationconfig_max_epoch_range(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
uint64_t uniffi_radix_engine_toolkit_uniffi_fn_method_validationconfig_max_notarized_payload_size(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
uint16_t uniffi_radix_engine_toolkit_uniffi_fn_method_validationconfig_max_tip_percentage(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_method_validationconfig_message_validation(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
uint16_t uniffi_radix_engine_toolkit_uniffi_fn_method_validationconfig_min_tip_percentage(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
uint8_t uniffi_radix_engine_toolkit_uniffi_fn_method_validationconfig_network_id(void*_Nonnull ptr, RustCallStatus *_Nonnull out_status
);
void uniffi_radix_engine_toolkit_uniffi_fn_init_callback_signer(ForeignCallback _Nonnull callback_stub, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_func_build_information(RustCallStatus *_Nonnull out_status
    
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_func_derive_olympia_account_address_from_public_key(RustBuffer public_key, RustBuffer olympia_network, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_func_derive_public_key_from_olympia_account_address(void*_Nonnull olympia_resource_address, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_func_derive_resource_address_from_olympia_resource_address(void*_Nonnull olympia_resource_address, uint8_t network_id, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_func_derive_virtual_account_address_from_olympia_account_address(void*_Nonnull olympia_account_address, uint8_t network_id, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_func_derive_virtual_account_address_from_public_key(RustBuffer public_key, uint8_t network_id, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_func_derive_virtual_identity_address_from_public_key(RustBuffer public_key, uint8_t network_id, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_func_derive_virtual_signature_non_fungible_global_id_from_public_key(RustBuffer public_key, uint8_t network_id, RustCallStatus *_Nonnull out_status
);
void*_Nonnull uniffi_radix_engine_toolkit_uniffi_fn_func_hash(RustBuffer data, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_func_known_addresses(uint8_t network_id, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_func_manifest_sbor_decode_to_string_representation(RustBuffer bytes, RustBuffer representation, uint8_t network_id, RustBuffer schema, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_func_metadata_sbor_decode(RustBuffer bytes, uint8_t network_id, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_func_metadata_sbor_encode(RustBuffer value, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_func_non_fungible_local_id_as_str(RustBuffer value, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_func_non_fungible_local_id_from_str(RustBuffer string, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_func_non_fungible_local_id_sbor_decode(RustBuffer bytes, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_func_non_fungible_local_id_sbor_encode(RustBuffer value, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_func_sbor_decode_to_string_representation(RustBuffer bytes, RustBuffer representation, uint8_t network_id, RustBuffer schema, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_func_sbor_decode_to_typed_native_event(RustBuffer event_type_identifier, RustBuffer event_data, uint8_t network_id, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_func_scrypto_sbor_decode_to_string_representation(RustBuffer bytes, RustBuffer representation, uint8_t network_id, RustBuffer schema, RustCallStatus *_Nonnull out_status
);
RustBuffer uniffi_radix_engine_toolkit_uniffi_fn_func_scrypto_sbor_encode_string_representation(RustBuffer representation, RustCallStatus *_Nonnull out_status
);
void uniffi_radix_engine_toolkit_uniffi_fn_func_test_panic(RustBuffer message, RustCallStatus *_Nonnull out_status
);
RustBuffer ffi_radix_engine_toolkit_uniffi_rustbuffer_alloc(int32_t size, RustCallStatus *_Nonnull out_status
);
RustBuffer ffi_radix_engine_toolkit_uniffi_rustbuffer_from_bytes(ForeignBytes bytes, RustCallStatus *_Nonnull out_status
);
void ffi_radix_engine_toolkit_uniffi_rustbuffer_free(RustBuffer buf, RustCallStatus *_Nonnull out_status
);
RustBuffer ffi_radix_engine_toolkit_uniffi_rustbuffer_reserve(RustBuffer buf, int32_t additional, RustCallStatus *_Nonnull out_status
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_func_build_information(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_func_derive_olympia_account_address_from_public_key(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_func_derive_public_key_from_olympia_account_address(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_func_derive_resource_address_from_olympia_resource_address(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_func_derive_virtual_account_address_from_olympia_account_address(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_func_derive_virtual_account_address_from_public_key(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_func_derive_virtual_identity_address_from_public_key(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_func_derive_virtual_signature_non_fungible_global_id_from_public_key(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_func_hash(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_func_known_addresses(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_func_manifest_sbor_decode_to_string_representation(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_func_metadata_sbor_decode(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_func_metadata_sbor_encode(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_func_non_fungible_local_id_as_str(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_func_non_fungible_local_id_from_str(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_func_non_fungible_local_id_sbor_decode(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_func_non_fungible_local_id_sbor_encode(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_func_sbor_decode_to_string_representation(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_func_sbor_decode_to_typed_native_event(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_func_scrypto_sbor_decode_to_string_representation(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_func_scrypto_sbor_encode_string_representation(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_func_test_panic(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_accessrule_and(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_accessrule_or(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_address_address_string(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_address_as_str(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_address_bytes(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_address_entity_type(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_address_is_global(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_address_is_global_component(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_address_is_global_consensus_manager(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_address_is_global_fungible_resource_manager(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_address_is_global_non_fungible_resource_manager(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_address_is_global_package(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_address_is_global_resource_manager(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_address_is_global_virtual(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_address_is_internal(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_address_is_internal_fungible_vault(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_address_is_internal_kv_store(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_address_is_internal_non_fungible_vault(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_address_is_internal_vault(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_address_network_id(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_decimal_abs(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_decimal_add(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_decimal_as_str(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_decimal_cbrt(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_decimal_ceiling(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_decimal_div(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_decimal_equal(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_decimal_floor(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_decimal_greater_than(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_decimal_greater_than_or_equal(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_decimal_is_negative(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_decimal_is_positive(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_decimal_is_zero(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_decimal_less_than(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_decimal_less_than_or_equal(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_decimal_mul(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_decimal_not_equal(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_decimal_nth_root(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_decimal_powi(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_decimal_round(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_decimal_sqrt(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_decimal_sub(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_hash_as_str(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_hash_bytes(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_instructions_as_str(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_instructions_instructions_list(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_instructions_network_id(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_intent_compile(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_intent_hash(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_intent_header(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_intent_intent_hash(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_intent_manifest(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_intent_message(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_intent_statically_validate(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_account_deposit(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_account_deposit_batch(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_account_try_deposit_batch_or_abort(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_account_try_deposit_batch_or_refund(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_account_try_deposit_or_abort(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_account_try_deposit_or_refund(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_allocate_global_address(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_assert_worktop_contains(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_assert_worktop_contains_any(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_assert_worktop_contains_non_fungibles(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_build(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_burn_resource(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_call_access_rules_method(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_call_direct_vault_method(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_call_function(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_call_metadata_method(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_call_method(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_call_royalty_method(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_clone_proof(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_create_access_controller_with_securify_structure(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_create_account_advanced(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_create_fungible_resource_manager(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_create_proof_from_auth_zone_of_all(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_create_proof_from_auth_zone_of_amount(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_create_proof_from_auth_zone_of_non_fungibles(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_create_proof_from_bucket_of_all(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_create_proof_from_bucket_of_amount(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_create_proof_from_bucket_of_non_fungibles(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_create_signature_based_access_controller(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_drop_all_proofs(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_drop_auth_zone_proofs(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_drop_auth_zone_signature_proofs(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_drop_proof(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_faucet_free_xrd(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_faucet_lock_fee(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_mint_fungible(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_pop_from_auth_zone(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_publish_package(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_push_to_auth_zone(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_return_to_worktop(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_set_metadata(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_set_role(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_take_all_from_worktop(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_take_from_worktop(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_take_non_fungibles_from_worktop(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_withdraw_from_account(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_manifestbuilder_withdraw_non_fungibles_from_account(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_messagevalidationconfig_max_decryptors(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_messagevalidationconfig_max_encrypted_message_length(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_messagevalidationconfig_max_mime_type_length(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_messagevalidationconfig_max_plaintext_message_length(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_nonfungibleglobalid_as_str(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_nonfungibleglobalid_local_id(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_nonfungibleglobalid_resource_address(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_notarizedtransaction_compile(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_notarizedtransaction_hash(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_notarizedtransaction_intent_hash(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_notarizedtransaction_notarized_transaction_hash(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_notarizedtransaction_notary_signature(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_notarizedtransaction_signed_intent(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_notarizedtransaction_signed_intent_hash(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_notarizedtransaction_statically_validate(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_olympiaaddress_as_str(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_olympiaaddress_public_key(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_precisedecimal_abs(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_precisedecimal_add(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_precisedecimal_as_str(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_precisedecimal_cbrt(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_precisedecimal_ceiling(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_precisedecimal_div(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_precisedecimal_equal(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_precisedecimal_floor(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_precisedecimal_greater_than(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_precisedecimal_greater_than_or_equal(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_precisedecimal_is_negative(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_precisedecimal_is_positive(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_precisedecimal_is_zero(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_precisedecimal_less_than(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_precisedecimal_less_than_or_equal(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_precisedecimal_mul(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_precisedecimal_not_equal(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_precisedecimal_nth_root(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_precisedecimal_powi(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_precisedecimal_round(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_precisedecimal_sqrt(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_precisedecimal_sub(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_privatekey_public_key(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_privatekey_sign(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_privatekey_sign_to_signature(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_privatekey_sign_to_signature_with_public_key(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_signedintent_compile(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_signedintent_hash(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_signedintent_intent(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_signedintent_intent_hash(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_signedintent_intent_signatures(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_signedintent_signed_intent_hash(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_signedintent_statically_validate(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_transactionbuilder_header(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_transactionbuilderheaderstep_manifest(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_transactionbuilderintentsignaturesstep_notarize_with_private_key(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_transactionbuilderintentsignaturesstep_notarize_with_signer(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_transactionbuilderintentsignaturesstep_sign_with_private_key(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_transactionbuilderintentsignaturesstep_sign_with_signer(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_transactionbuildermessagestep_message(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_transactionbuildermessagestep_sign_with_private_key(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_transactionbuildermessagestep_sign_with_signer(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_transactionhash_as_hash(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_transactionhash_as_str(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_transactionhash_bytes(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_transactionhash_network_id(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_transactionmanifest_accounts_deposited_into(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_transactionmanifest_accounts_requiring_auth(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_transactionmanifest_accounts_withdrawn_from(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_transactionmanifest_analyze_execution(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_transactionmanifest_blobs(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_transactionmanifest_extract_addresses(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_transactionmanifest_identities_requiring_auth(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_transactionmanifest_instructions(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_transactionmanifest_modify(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_transactionmanifest_statically_validate(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_validationconfig_max_epoch_range(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_validationconfig_max_notarized_payload_size(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_validationconfig_max_tip_percentage(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_validationconfig_message_validation(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_validationconfig_min_tip_percentage(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_validationconfig_network_id(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_accessrule_allow_all(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_accessrule_deny_all(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_accessrule_require(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_accessrule_require_all_of(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_accessrule_require_amount(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_accessrule_require_any_of(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_accessrule_require_count_of(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_accessrule_require_virtual_signature(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_address_from_raw(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_address_new(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_address_resource_address_from_olympia_resource_address(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_address_virtual_account_address_from_olympia_address(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_address_virtual_account_address_from_public_key(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_address_virtual_identity_address_from_public_key(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_decimal_max(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_decimal_min(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_decimal_new(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_decimal_one(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_decimal_zero(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_hash_from_hex_string(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_hash_from_unhashed_bytes(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_hash_new(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_instructions_from_instructions(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_instructions_from_string(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_intent_decompile(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_intent_new(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_manifestbuilder_new(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_messagevalidationconfig_default(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_messagevalidationconfig_new(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_nonfungibleglobalid_from_parts(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_nonfungibleglobalid_new(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_nonfungibleglobalid_virtual_signature_badge(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_notarizedtransaction_decompile(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_notarizedtransaction_new(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_olympiaaddress_new(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_precisedecimal_max(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_precisedecimal_min(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_precisedecimal_new(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_precisedecimal_one(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_precisedecimal_zero(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_privatekey_new(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_privatekey_new_ed25519(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_privatekey_new_secp256k1(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_signedintent_decompile(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_signedintent_new(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_transactionbuilder_new(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_transactionhash_from_str(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_transactionmanifest_new(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_validationconfig_default(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_constructor_validationconfig_new(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_signer_sign(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_signer_sign_to_signature(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_signer_sign_to_signature_with_public_key(void
    
);
uint16_t uniffi_radix_engine_toolkit_uniffi_checksum_method_signer_public_key(void
    
);
uint32_t ffi_radix_engine_toolkit_uniffi_uniffi_contract_version(void
    
);

